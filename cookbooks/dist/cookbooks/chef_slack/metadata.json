{"name":"chef_slack","version":"3.1.1","description":"Slack resource for posting to slack.com channels","long_description":"# chef_slack Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/chef_slack.svg?branch=master)](https://travis-ci.org/chef-cookbooks/chef_slack) [![Cookbook Version](https://img.shields.io/cookbook/v/chef_slack.svg)](https://supermarket.chef.io/cookbooks/chef_slack)\n\nThis cookbook sends messages to a [Slack](http://www.slack.com) channel using the Incoming Webhook Integration\n\n## Requirements\n\n### Platforms\n\n- Any platform supported by Chef\n\n### Chef\n\n- Chef 12.7+\n\n### Cookbooks\n\n- none\n\n## slack_notify Resource Usage\n\nIn your `metadata.rb` you need to add `depends chef_slack'`. Passing the below will use default attributes\n\n```ruby\nslack_notify \"Say Summat!\"\n```\n\n```ruby\nslack_notify \"send_notification_message\" do\n  message \"This is a notification message\"\n  webhook_url 'https://hooks.slack.com/services/XXXX/XXXXXXX/XXXXXX'\n  not_if { node['im_boring'] }\nend\n```\n\n```ruby\nslack_notify \"channel_nothing\" do\n  message \"heres a message to kick off later\"\n  username 'test_user'\n  channels ['foo','bar']\n  webhook_url 'https://hooks.slack.com/services/XXXX/XXXXXXX/XXXXXX'\n  icon_emoji ':tada:'\n  action :nothing\nend\n\nsomething \"talk_as_test_user_to_multiple_channels\" do\n  notifies :notify, \"slack_notify[channel_nothing]\", :immediately\nend\n```\n\n## License & Authors\n\n```\nAuthor: Ian Henry <ihenry@chef.io>\n\nAuthor: Jason Rohwedder <jro@risk.io> https://github.com/KennaSecurity/chef-slack\n\nCopyright:: 2009-2015, Chef Software, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","redhat":">= 0.0.0","centos":">= 0.0.0","suse":">= 0.0.0","opensuse":">= 0.0.0","opensuseleap":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","amazon":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/chef_slack","issues_url":"https://github.com/chef-cookbooks/chef_slack/issues","chef_version":[[">= 12.7"]],"ohai_version":[]}